<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>scopeName</key>
    <string>source.move</string>
    <key>repository</key>
    <dict>
      <key>line-comments</key>
      <dict>
        <key>comment</key>
        <string>Single-line comment</string>
        <key>name</key>
        <string>comment.line.double-slash.move</string>
        <key>begin</key>
        <string>//</string>
        <key>end</key>
        <string>$</string>
      </dict>
      <key>block-comments</key>
      <dict>
        <key>comment</key>
        <string>Supported since https://github.com/diem/diem/pull/3714</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Block documentation comment</string>
            <key>name</key>
            <string>comment.block.documentation.move</string>
            <key>begin</key>
            <string>/\*[\*!](?![\*/])</string>
            <key>end</key>
            <string>\*/</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Block comment</string>
            <key>name</key>
            <string>comment.block.move</string>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>name</key>
        <string>meta.comments.move</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line-comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block-comments</string>
          </dict>
        </array>
      </dict>
      <key>macros</key>
      <dict>
        <key>name</key>
        <string>support.constant.macro.move</string>
        <key>match</key>
        <string>#\[(?:[\w0-9=_\(\)\s"]+)\]</string>
      </dict>
      <key>script</key>
      <dict>
        <key>name</key>
        <string>meta.script.move</string>
        <key>begin</key>
        <string>\b(script)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.script.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.script_scope.move</string>
            <key>comment</key>
            <string>Script scope</string>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#const</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#import</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#fun</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>address</key>
      <dict>
        <key>name</key>
        <string>meta.address_block.move</string>
        <key>comment</key>
        <string>Address block</string>
        <key>begin</key>
        <string>\b(address)\b</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.type.address.keyword.move</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.address.definition.move</string>
            <key>comment</key>
            <string>Address value/const</string>
            <key>begin</key>
            <string>(?&lt;=address)</string>
            <key>end</key>
            <string>(?=[{])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#address_literal</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Named Address</string>
                <key>name</key>
                <string>entity.name.type.move</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#module</string>
          </dict>
        </array>
      </dict>
      <key>module</key>
      <dict>
        <key>name</key>
        <string>meta.module.move</string>
        <key>comment</key>
        <string>Module definition</string>
        <key>begin</key>
        <string>\b(module)\b</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.type.move</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Module name</string>
            <key>begin</key>
            <string>(?&lt;=module)</string>
            <key>end</key>
            <string>(?={)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Module namespace / address</string>
                <key>name</key>
                <string>constant.other.move</string>
                <key>begin</key>
                <string>(?&lt;=module)</string>
                <key>end</key>
                <string>(?=[(::){])</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Module name</string>
                <key>name</key>
                <string>entity.name.type.move</string>
                <key>begin</key>
                <string>(?&lt;=::)</string>
                <key>end</key>
                <string>(?=[\s{])</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.module_scope.move</string>
            <key>comment</key>
            <string>Module scope</string>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#macros</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#import</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#friend</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#const</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#struct</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#entry_fun</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#native_fun</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#public_fun</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#fun</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#spec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#block</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>import</key>
      <dict>
        <key>name</key>
        <string>meta.import.move</string>
        <key>begin</key>
        <string>\b(use)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.type.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#address_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as-import</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Uppercase entities</string>
            <key>match</key>
            <string>\b([A-Z]\w*)\b</string>
            <key>name</key>
            <string>entity.name.type.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Module members</string>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#as-import</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Uppercase entities</string>
                <key>match</key>
                <string>\b([A-Z]\w*)\b</string>
                <key>name</key>
                <string>entity.name.type.move</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>comment</key>
            <string>Name of the imported module</string>
            <key>match</key>
            <string>\b(\w+)\b</string>
            <key>name</key>
            <string>meta.entity.name.type.module.move</string>
          </dict>
        </array>
      </dict>
      <key>friend</key>
      <dict>
        <key>name</key>
        <string>meta.friend.move</string>
        <key>begin</key>
        <string>\b(friend)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.type.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#address_literal</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Name of the imported module</string>
            <key>match</key>
            <string>\b(\w+)\b</string>
            <key>name</key>
            <string>entity.name.type.module.move</string>
          </dict>
        </array>
      </dict>
      <key>const</key>
      <dict>
        <key>name</key>
        <string>meta.const.move</string>
        <key>begin</key>
        <string>\b(const)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.const.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#primitives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#vector</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b([\w_]+)\b</string>
            <key>name</key>
            <string>constant.other.move</string>
          </dict>
        </array>
      </dict>
      <key>struct</key>
      <dict>
        <key>name</key>
        <string>meta.struct.move</string>
        <key>begin</key>
        <string>\b(struct)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.type.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.struct_def.move</string>
            <key>comment</key>
            <string>Struct definition</string>
            <key>begin</key>
            <string>(?&lt;=struct)</string>
            <key>end</key>
            <string>(?={)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Has Abilities</string>
                <key>match</key>
                <string>\b(has)\b</string>
                <key>name</key>
                <string>keyword.control.ability.has.move</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Ability</string>
                <key>match</key>
                <string>\b(store|key|drop|copy)\b</string>
                <key>name</key>
                <string>entity.name.type.ability.move</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Struct name</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
                <key>name</key>
                <string>entity.name.type.move</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type_param</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.struct_body.move</string>
            <key>comment</key>
            <string>Struct body</string>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#self_access</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#module_access</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>native_fun</key>
      <dict>
        <key>name</key>
        <string>meta.native_fun.move</string>
        <key>comment</key>
        <string>Native function</string>
        <key>begin</key>
        <string>\b(native)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.native.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[;}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>native public function</string>
            <key>match</key>
            <string>\b(public)\b</string>
            <key>name</key>
            <string>storage.modifier.public.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>native entry function</string>
            <key>match</key>
            <string>\b(entry)\b</string>
            <key>name</key>
            <string>storage.modifier.entry.move</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_signature</string>
          </dict>
        </array>
      </dict>
      <key>public_fun</key>
      <dict>
        <key>name</key>
        <string>meta.public_fun.move</string>
        <key>comment</key>
        <string>Public function</string>
        <key>begin</key>
        <string>\b(public)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.public.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[;}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Public native function</string>
            <key>match</key>
            <string>\b(native)\b</string>
            <key>name</key>
            <string>storage.modifier.native.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Public entry function</string>
            <key>match</key>
            <string>\b(entry)\b</string>
            <key>name</key>
            <string>storage.modifier.entry.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Script visibility</string>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>Friend or Script visibility</string>
                <key>match</key>
                <string>\b(script|friend)\b</string>
                <key>name</key>
                <string>storage.modifier.public.script.move</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun</string>
          </dict>
        </array>
      </dict>
      <key>entry_fun</key>
      <dict>
        <key>name</key>
        <string>meta.entry_fun.move</string>
        <key>comment</key>
        <string>entry fun name() {}</string>
        <key>begin</key>
        <string>\b(entry)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.entry.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>entry native function</string>
            <key>match</key>
            <string>\b(native)\b</string>
            <key>name</key>
            <string>storage.modifier.native.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>entry public function</string>
            <key>match</key>
            <string>\b(public)\b</string>
            <key>name</key>
            <string>storage.modifier.public.move</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun</string>
          </dict>
        </array>
      </dict>
      <key>fun</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#fun_signature</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_body</string>
          </dict>
        </array>
      </dict>
      <key>fun_signature</key>
      <dict>
        <key>name</key>
        <string>meta.fun_signature.move</string>
        <key>comment</key>
        <string>Function signature</string>
        <key>begin</key>
        <string>\b(fun)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.fun.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[;{])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mut</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function_name.move</string>
            <key>comment</key>
            <string>Function name</string>
            <key>begin</key>
            <string>(?&lt;=fun)</string>
            <key>end</key>
            <string>(?=[&lt;(])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>name</key>
                <string>entity.name.function.move</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#type_param</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.parentheses.move</string>
            <key>comment</key>
            <string>Parentheses</string>
            <key>begin</key>
            <string>[(]</string>
            <key>end</key>
            <string>[)]</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#self_access</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#module_access</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#mut</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>comment</key>
            <string>Keyword acquires</string>
            <key>match</key>
            <string>\b(acquires)\b</string>
            <key>name</key>
            <string>storage.modifier</string>
          </dict>
        </array>
      </dict>
      <key>type_param</key>
      <dict>
        <key>name</key>
        <string>meta.generic_param.move</string>
        <key>comment</key>
        <string>Generic type param</string>
        <key>begin</key>
        <string>&lt;</string>
        <key>end</key>
        <string>&gt;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#phantom</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module_access</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Trait-like condition</string>
            <key>match</key>
            <string>\b(store|drop|key|copy)\b</string>
            <key>name</key>
            <string>entity.name.type.kind.move</string>
          </dict>
        </array>
      </dict>
      <key>fun_body</key>
      <dict>
        <key>name</key>
        <string>meta.fun_body.move</string>
        <key>comment</key>
        <string>Function body</string>
        <key>begin</key>
        <string>{</string>
        <key>end</key>
        <string>}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mut</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#let</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assert</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#move_copy</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#resource_methods</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
        </array>
      </dict>
      <key>fun_call</key>
      <dict>
        <key>name</key>
        <string>meta.fun_call.move</string>
        <key>comment</key>
        <string>Function call</string>
        <key>begin</key>
        <string>\b(\w+)\s*(?:&lt;[\w\s,]+&gt;)?\s*[(]</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.call.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>[)]</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#resource_methods</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#move_copy</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mut</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as</string>
          </dict>
        </array>
      </dict>
      <key>block</key>
      <dict>
        <key>name</key>
        <string>meta.block.move</string>
        <key>comment</key>
        <string>Block expression or definition</string>
        <key>begin</key>
        <string>{</string>
        <key>end</key>
        <string>}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mut</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#let</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assert</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#move_copy</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#resource_methods</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module_access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
        </array>
      </dict>
      <key>phantom</key>
      <dict>
        <key>comment</key>
        <string>Keyword phantom inside type parameters</string>
        <key>match</key>
        <string>\b(phantom)\b</string>
        <key>name</key>
        <string>keyword.control.phantom.move</string>
      </dict>
      <key>let</key>
      <dict>
        <key>comment</key>
        <string>Keyword let</string>
        <key>match</key>
        <string>\b(let)\b</string>
        <key>name</key>
        <string>keyword.control.move</string>
      </dict>
      <key>move_copy</key>
      <dict>
        <key>comment</key>
        <string>Keywords move and copy</string>
        <key>match</key>
        <string>\b(move|copy)\b</string>
        <key>name</key>
        <string>variable.language.move</string>
      </dict>
      <key>control</key>
      <dict>
        <key>comment</key>
        <string>Control flow</string>
        <key>match</key>
        <string>\b(return|while|loop|if|else|break|continue|abort)\b</string>
        <key>name</key>
        <string>keyword.control.move</string>
      </dict>
      <key>as-import</key>
      <dict>
        <key>name</key>
        <string>meta.import_as.move</string>
        <key>comment</key>
        <string>Keyword as in import statement</string>
        <key>match</key>
        <string>\b(as)\b</string>
      </dict>
      <key>as</key>
      <dict>
        <key>comment</key>
        <string>Keyword as</string>
        <key>match</key>
        <string>\b(as)\b</string>
        <key>name</key>
        <string>keyword.control.move</string>
      </dict>
      <key>mut</key>
      <dict>
        <key>comment</key>
        <string>&amp;mut reference</string>
        <key>match</key>
        <string>(?&lt;=&amp;)(mut)\b</string>
        <key>name</key>
        <string>storage.modifier.mut.move</string>
      </dict>
      <key>resource_methods</key>
      <dict>
        <key>comment</key>
        <string>Methods to work with resource</string>
        <key>match</key>
        <string>\b(borrow_global|borrow_global_mut|exists|move_from|move_to_sender|move_to)\b</string>
        <key>name</key>
        <string>support.function.typed.move</string>
      </dict>
      <key>assert</key>
      <dict>
        <key>comment</key>
        <string>Assert built-in</string>
        <key>match</key>
        <string>\b(assert)\b</string>
        <key>name</key>
        <string>support.function.assert.move</string>
      </dict>
      <key>self_access</key>
      <dict>
        <key>name</key>
        <string>meta.self_access.move</string>
        <key>comment</key>
        <string>Use of Self</string>
        <key>match</key>
        <string>\b(Self)::(\w+)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.self.move</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.call.move</string>
          </dict>
        </dict>
      </dict>
      <key>module_access</key>
      <dict>
        <key>name</key>
        <string>meta.module_access.move</string>
        <key>comment</key>
        <string>Use of module type or method</string>
        <key>match</key>
        <string>\b(\w+)::(\w+)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.entity.name.type.accessed.module.move</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.call.move</string>
          </dict>
        </dict>
      </dict>
      <key>types</key>
      <dict>
        <key>name</key>
        <string>meta.types.move</string>
        <key>comment</key>
        <string>Built-in types + vector</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#primitives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#vector</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Capitalized type names</string>
            <key>name</key>
            <string>entity.name.type</string>
            <key>match</key>
            <string>\b([A-Z][A-Za-z_]+)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>All-uppercase const literal</string>
            <key>match</key>
            <string>\b([A-Z_]+)\b</string>
            <key>name</key>
            <string>constant.other.move</string>
          </dict>
        </array>
      </dict>
      <key>vector</key>
      <dict>
        <key>name</key>
        <string>meta.vector.move</string>
        <key>begin</key>
        <string>\b(vector)&lt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.type.vector.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>&gt;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#primitives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#vector</string>
          </dict>
        </array>
      </dict>
      <key>primitives</key>
      <dict>
        <key>comment</key>
        <string>Primitive types</string>
        <key>match</key>
        <string>\b(u8|u16|u32|u64|u128|u256|address|bool|signer)\b</string>
        <key>name</key>
        <string>support.type.primitives.move</string>
      </dict>
      <key>address_literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>16-byte (or shorter) hex address in Libra</string>
            <key>match</key>
            <string>\b(0x[A-Fa-f0-9][A-Fa-f0-9]{,31})\b</string>
            <key>name</key>
            <string>support.constant.diem.address.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Bech32 with wallet1 prefix - Dfinance format</string>
            <key>match</key>
            <string>\b(wallet1\w{38})</string>
            <key>name</key>
            <string>support.constant.dfinance.address.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Named address parameter (as build flag)</string>
            <key>match</key>
            <string>\s([@]\w+)\b</string>
            <key>name</key>
            <string>support.constant.named.address.move</string>
          </dict>
        </array>
      </dict>
      <key>literals</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Hex literal (still to find out)</string>
            <key>name</key>
            <string>constant.numeric.hex.move</string>
            <key>match</key>
            <string>0x[_a-fA-F0-9]+(?:[iu](?:8|16|32|64|size))?</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Numeric literal</string>
            <key>name</key>
            <string>constant.numeric.move</string>
            <key>match</key>
            <string>(?&lt;!(?:\w|(?:(?&lt;!\.)\.)))[0-9][_0-9]*(?:\.(?!\.)(?:[0-9][_0-9]*)?)?(?:[eE][+\-]?[_0-9]+)?(?:[u](?:8|64|128|))?</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Bytearray hex literal</string>
            <key>match</key>
            <string>\b(?:h)("[a-fA-F0-9]+")</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.character.move</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.ascii_literal.move</string>
            <key>comment</key>
            <string>ASCII Bytestring literal</string>
            <key>begin</key>
            <string>\bb"</string>
            <key>end</key>
            <string>"</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>comment</key>
                <string>Special symbol escape</string>
                <key>name</key>
                <string>constant.character.escape.move</string>
                <key>match</key>
                <string>\\[nrt\0"]</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>HEX Escape</string>
                <key>name</key>
                <string>constant.character.escape.hex.move</string>
                <key>match</key>
                <string>\\x[a-fA-F0-9][A-Fa-f0-9]</string>
              </dict>
              <dict>
                <key>comment</key>
                <string>ASCII Character</string>
                <key>name</key>
                <string>string.quoted.double.raw.move</string>
                <key>match</key>
                <string>[\x00-\x7F]</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.hex_literal.move</string>
            <key>comment</key>
            <string>vector&lt;u8&gt; as hex literal: x</string>
            <key>match</key>
            <string>x"([A-F0-9a-f]+)"</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.hex.move</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>comment</key>
            <string>Booleans</string>
            <key>name</key>
            <string>constant.language.boolean.move</string>
            <key>match</key>
            <string>\b(?:true|false)\b</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#address_literal</string>
          </dict>
        </array>
      </dict>
      <key>spec_block</key>
      <dict>
        <key>comment</key>
        <string>Spec block</string>
        <key>name</key>
        <string>meta.spec_block.move</string>
        <key>begin</key>
        <string>{</string>
        <key>end</key>
        <string>}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spec_block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spec_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#let</string>
          </dict>
        </array>
      </dict>
      <key>spec_keywords</key>
      <dict>
        <key>match</key>
        <string>\b(global|pack|unpack|pragma|native|include|ensures|requires|invariant|apply|aborts_if|modifies)\b</string>
        <key>name</key>
        <string>keyword.control.move.spec</string>
      </dict>
      <key>spec_define</key>
      <dict>
        <key>comment</key>
        <string>Spec define keyword</string>
        <key>name</key>
        <string>meta.spec_define.move</string>
        <key>begin</key>
        <string>\b(define)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.move.spec</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[;{])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#spec_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Function name</string>
            <key>begin</key>
            <string>(?&lt;=define)</string>
            <key>end</key>
            <string>(?=[(])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>name</key>
                <string>entity.name.function.move</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>spec_types</key>
      <dict>
        <key>comment</key>
        <string>Spec-only types</string>
        <key>match</key>
        <string>\b(range|num|vector|bool|u8|u16|u32|u64|u128|u256|address)\b</string>
        <key>name</key>
        <string>support.type.vector.move</string>
      </dict>
      <key>spec</key>
      <dict>
        <key>name</key>
        <string>meta.spec.move</string>
        <key>begin</key>
        <string>\b(spec)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.spec.move</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[;}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Spec target</string>
            <key>match</key>
            <string>\b(module|schema|struct|fun)</string>
            <key>name</key>
            <string>storage.modifier.spec.target.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Spec define inline</string>
            <key>match</key>
            <string>\b(define)</string>
            <key>name</key>
            <string>storage.modifier.spec.define.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Target name</string>
            <key>match</key>
            <string>\b(\w+)\b</string>
            <key>name</key>
            <string>entity.name.function.move</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>Spec block</string>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#spec_block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#spec_types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#spec_define</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#spec_keywords</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#control</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#fun_call</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#literals</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#let</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#address</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#module</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#script</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#macros</string>
      </dict>
    </array>
  </dict>
</plist>